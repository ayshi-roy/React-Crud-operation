[{"C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\index.js":"1","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\reportWebVitals.js":"2","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\App.js":"3","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\Home\\Home.js":"4","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\Form\\Form.js":"5","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\Navbar\\Navbar.js":"6","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\Cards\\Cards.js":"7","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\UpdateCardValue\\UpdateCardValue.js":"8"},{"size":500,"mtime":499162500000,"results":"9","hashOfConfig":"10"},{"size":362,"mtime":499162500000,"results":"11","hashOfConfig":"10"},{"size":811,"mtime":1608155520146,"results":"12","hashOfConfig":"10"},{"size":925,"mtime":1608155279455,"results":"13","hashOfConfig":"10"},{"size":3417,"mtime":1608267224905,"results":"14","hashOfConfig":"10"},{"size":1264,"mtime":1608155050996,"results":"15","hashOfConfig":"10"},{"size":4760,"mtime":1608155943459,"results":"16","hashOfConfig":"10"},{"size":5671,"mtime":1608163670501,"results":"17","hashOfConfig":"10"},{"filePath":"18","messages":"19","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},"v0zlbd",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"23","messages":"24","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"25","usedDeprecatedRules":"20"},{"filePath":"26","messages":"27","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"20"},{"filePath":"28","messages":"29","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"30","usedDeprecatedRules":"20"},{"filePath":"31","messages":"32","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33","usedDeprecatedRules":"20"},{"filePath":"34","messages":"35","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36","usedDeprecatedRules":"20"},{"filePath":"37","messages":"38","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"40"},"C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\index.js",[],["41","42"],"C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\reportWebVitals.js",[],"C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\App.js",["43"],"import logo from './logo.svg';\nimport './App.css';\nimport Home from './Component/Home/Home';\nimport { createContext, useState } from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route  \n} from \"react-router-dom\";\nimport Form from './Component/Form/Form';\n\nexport const DataContext = createContext([]);\n \nfunction App() {\n\n  const [singleData, setSingleData] = useState([]);\n  return (\n\n    <DataContext.Provider value={[singleData, setSingleData]} >\n      <Router>\n        <Switch>\n          <Route path=\"/home\">\n            <Home></Home>\n          </Route>\n          <Route path=\"/form\">\n            <Form></Form>\n          </Route>\n          <Route path=\"/\">\n            <Home />\n          </Route>\n        </Switch>\n      </Router>        \n    </DataContext.Provider>\n  );\n}\n\nexport default App;\n","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\Home\\Home.js",[],"C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\Form\\Form.js",["44"],"import React, { useState } from 'react';\r\nimport { faCloudUploadAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport './Form.css';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\n\r\nimport { useForm } from \"react-hook-form\";  \r\n\r\nconst Form = () => { \r\n\r\n    const { register, errors, handleSubmit } = useForm();\r\n\r\n    const MySwal = withReactContent(Swal);    \r\n        \r\n    const [file, setFile] = useState(null);\r\n\r\n    \r\n    const handleFileChange = (e) => {\r\n        const newFile = e.target.files[0];\r\n        setFile(newFile);\r\n    }\r\n    function refreshPage() {\r\n      window.location.reload(false);\r\n    }\r\n\r\n    const onSubmit = (data,e) => {\r\n\r\n      const formData = new FormData()\r\n      formData.append('file', file);\r\n      formData.append('title', data.title);\r\n      formData.append('name', data.name);\r\n      formData.append('tags', data.tags)\r\n    \r\n      fetch('http://localhost:5000/addInformation', {\r\n        method: 'POST',\r\n        body: formData\r\n      })\r\n      .then(response => response.json())\r\n      .then(success => {\r\n        console.log(success);    \r\n      })\r\n      .catch(error => {\r\n        console.error(error)\r\n      })\r\n      MySwal.fire({\r\n        position: 'top-end',\r\n        icon: 'success',\r\n        title: 'Your work has been saved',\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        // title: <p>Hello World</p>,\r\n        footer: 'Copyright 2018',\r\n        didOpen: () => {                \r\n          MySwal.clickConfirm()\r\n        }\r\n      }).then(() => {\r\n        return MySwal.fire(<p>Your Information Submitted Successfully </p>)\r\n      })\r\n      e.target.reset();\r\n      refreshPage();\r\n       \r\n    }\r\n\r\n    return (\r\n        <div className=\"content sticky-top mt-4\">\r\n            <div className=\"form sticky-top\">\r\n                <form onSubmit={handleSubmit(onSubmit)}>\r\n                    <input name=\"title\" className=\"name\" placeholder=\"Title\"  ref={register({ required: true })} />\r\n                    {errors.title && <small className=\"text-danger\">This field is required</small>}\r\n                    <input name=\"name\" className=\"name\" placeholder=\"Author Name\" ref={register({ required: true })} />\r\n                    {errors.name && <small className=\"text-danger\">This field is required</small>}\r\n                    <textarea rows=\"3\" cols=\"40\" name=\"tags\" placeholder=\"Tags\" type=\"text\"  className=\"name\" ref={register({ required: true })} />\r\n                    {errors.tags && <small className=\"text-danger\">This field is required</small>}\r\n                    <div className=\"form-group\">                      \r\n                      <label className=\"upload-btn\">\r\n                        <input type=\"file\" name=\"image\" onChange={handleFileChange} name=\"file\" className=\"form-control-file\"/>                        \r\n                        <FontAwesomeIcon\r\n                          icon={faCloudUploadAlt}\r\n                          className=\"mr-2\"\r\n                        />\r\n                        Upload Image\r\n                      </label>                     \r\n                    </div>\r\n                    <input id=\"btn\" value=\"Create a Blog\" className=\"login\" type=\"submit\" />\r\n                </form>                \r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Form;","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\Navbar\\Navbar.js",["45","46"],"import React from 'react';\r\nimport './Navbar.css';\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <div>\r\n            <nav className=\"navbar navbar-expand-lg navbar-light\">\r\n                <a className=\"navbar-brand\" href=\"#\">\r\n                    <h4 className=\"nav_nam text-white\">Pioneer alph@ </h4>\r\n                </a>\r\n                <button className=\"navbar-toggler\" type=\"button\" data-toggle=\"collapse\" data-target=\"#navbarSupportedContent\" aria-controls=\"navbarSupportedContent\" aria-expanded=\"false\" aria-label=\"Toggle navigation\">\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav ml-auto\">\r\n                        <li className=\"nav-item active\">\r\n                            <a className=\"navbar-brand\" href=\"#\">\r\n                                <h4 className=\"nav_nam text-white mr-3\">Add A Blog</h4>\r\n                            </a>                               \r\n                        </li>                        \r\n                    </ul>                    \r\n                </div>\r\n            </nav>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Navbar;","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\Cards\\Cards.js",["47"],"import React,{useState,useEffect, useContext} from 'react';\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardHeader from '@material-ui/core/CardHeader';\r\nimport CardMedia from '@material-ui/core/CardMedia';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Avatar from '@material-ui/core/Avatar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { red } from '@material-ui/core/colors';\r\nimport Swal from 'sweetalert2';\r\nimport withReactContent from 'sweetalert2-react-content';\r\nimport { DataContext } from '../../App';\r\nimport Spinner from 'react-spinner-material';\r\nimport './Cards.css';\r\nimport UpdateCardValue from '../UpdateCardValue/UpdateCardValue';\r\n\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    maxWidth: 345,\r\n  },\r\n  media: {\r\n    height: 0,\r\n    paddingTop: '56.25%', // 16:9\r\n  },\r\n  expand: {\r\n    transform: 'rotate(0deg)',\r\n    marginLeft: 'auto',\r\n    transition: theme.transitions.create('transform', {\r\n      duration: theme.transitions.duration.shortest,\r\n    }),\r\n  },\r\n  expandOpen: {\r\n    transform: 'rotate(180deg)',\r\n  },\r\n  avatar: {\r\n    backgroundColor: red[500],\r\n  },\r\n}));\r\n\r\n\r\nconst Cards = () => { \r\n\r\n  const [getData, setGetInformation] = useState([]);\r\n\r\n  //for metarial ui extention\r\n  const MySwal = withReactContent(Swal);\r\n  const classes = useStyles();  \r\n\r\n  //Context api\r\n  const [singleData, setSingleData] = useContext(DataContext);\r\n\r\n\r\n  const [modalIsOpen,setIsOpen] = useState(false);\r\n  function openModal() {\r\n    setIsOpen(true);\r\n  }\r\n  \r\n  function closeModal(){\r\n    setIsOpen(false);\r\n  }\r\n\r\n\r\n //for all data loading  \r\n const handleInformation = () =>{\r\n    fetch('http://localhost:5000/allInformation')\r\n    .then(res =>  \r\n       res.json())\r\n    .then(data => {      \r\n      setGetInformation(data)\r\n    })\r\n  }\r\n\r\n  useEffect(() => {       \r\n    handleInformation();\r\n },[])\r\n\r\n //delete each blog\r\n const deleteCart = (id) => {\r\n    fetch('http://localhost:5000/delete/'+id,{\r\n        method: 'DELETE'\r\n    })\r\n    .then(res => res.json())\r\n    .then(result => {\r\n      console.log(result);      \r\n    }) \r\n    MySwal.fire({\r\n      position: 'top-end',\r\n      icon: 'success',\r\n      title: 'Your work has been saved',\r\n      showConfirmButton: false,\r\n      timer: 1500,\r\n      // title: <p>Hello World</p>,\r\n      footer: 'Copyright 2018',\r\n      didOpen: () => {                \r\n        MySwal.clickConfirm()\r\n      }\r\n    }).then(() => {\r\n      return MySwal.fire(<p>Your Information deleted Successfully </p>)\r\n    })\r\n    \r\n    handleInformation();\r\n  }\r\n\r\n//loading a single blog data  \r\nconst loadingCart = (id) => {\r\n  openModal();  \r\n  fetch('http://localhost:5000/singleInformation/'+id)\r\n  .then(res => res.json())\r\n  .then(data => { \r\n     setSingleData(data); \r\n     \r\n  })\r\n}\r\n    \r\n  return (\r\n    <div className=\"row\">\r\n        {\r\n           getData.length === 0 &&  \r\n           <div className=\"spinner\"><Spinner size={150} spinnercolor={\"#333\"} spinnerwidth={4} visible={true} /></div>\r\n        }\r\n           \r\n        {    getData.map(eachData => \r\n              <div className=\"col-md-4 mt-2\" key={eachData._id}>\r\n                <Card className={classes.root}>\r\n                    <CardHeader\r\n                        avatar={\r\n                        <Avatar aria-label=\"recipe\" className={classes.avatar}>\r\n                            R\r\n                        </Avatar>\r\n                        }                    \r\n                        title={eachData.title}\r\n                        subheader={eachData.name}\r\n                    />\r\n                    <CardMedia\r\n                        className={classes.media}\r\n                        image={`data:image/png;base64,${eachData.image.img}`}\r\n                        title=\"Paella dish\"\r\n                    />\r\n                    <CardContent>\r\n                        <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n                        <h3 className=\"text-dark\">Description</h3>   \r\n                          {eachData.tags}\r\n                        </Typography>\r\n                    </CardContent>\r\n                    \r\n                    <button type=\"button\" onClick={() => deleteCart(eachData._id)} className=\"btn btn-danger ml-4 mb-3\">Delete</button>\r\n                    <button type=\"button\" onClick={() => loadingCart(eachData._id)} className=\"btn btn-info ml-5 mb-3\">Edit</button>\r\n                    <UpdateCardValue modalIsOpen={modalIsOpen} closeModal={closeModal}></UpdateCardValue>\r\n                 </Card>            \r\n              </div>\r\n            )          \r\n          \r\n        }      \r\n        \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Cards;","C:\\All project\\intern-Project2\\CRUD_Operation\\client\\src\\Component\\UpdateCardValue\\UpdateCardValue.js",["48","49","50"],"import React, { useContext, useState } from 'react';\r\nimport Modal from 'react-modal';\r\nimport { useForm } from \"../../../node_modules/react-hook-form\";\r\nimport { DataContext } from '../../App';\r\nimport Swal from 'sweetalert2';\r\nimport { faCloudUploadAlt } from \"@fortawesome/free-solid-svg-icons\";\r\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\r\nimport withReactContent from '../../../node_modules/sweetalert2-react-content';\r\n\r\nconst customStyles = {\r\n  content : {\r\n    top                   : '50%',\r\n    left                  : '35%',\r\n    right                 : 'auto',\r\n    bottom                : 'auto',\r\n    marginRight           : '-80%',\r\n    transform             : 'translate(-50%, -50%)',\r\n    width: '550px',\r\n    borderRadius : '35px',\r\n    boxShadow : '5px 5px 10px rgba(0, 0, 0, 0.6)',\r\n    padding : '50px 50px'\r\n  }\r\n};\r\n\r\nModal.setAppElement('#root')\r\n\r\n  const UpdateCardValue = ({modalIsOpen,closeModal}) => {\r\n\r\n  const { register, handleSubmit, errors } = useForm();\r\n\r\n  const [singleData, setSingleData] = useContext(DataContext);\r\n\r\n  const MySwal = withReactContent(Swal);\r\n  \r\n  const {_id} = singleData; \r\n  \r\n  const [file, setFile] = useState(null);\r\n\r\n  function refreshPage() {\r\n    window.location.reload(false);\r\n  }\r\n\r\n  const handleFileChange = (e) => {\r\n    const newFile = e.target.files[0];\r\n    setFile(newFile);\r\n  }\r\n  // const onSubmit = (data) => { \r\n  //   const formData = new FormData()\r\n  //     formData.append('file', file);\r\n  //     formData.append('title', data.title);\r\n  //     formData.append('name', data.name);\r\n  //     formData.append('tags', data.tags)\r\n       \r\n  //   fetch('http://localhost:5000/update/'+_id,{\r\n  //         method: 'PATCH',\r\n  //         headers: {'Content-type' : 'application/json'},\r\n  //         body: formData\r\n  //       })\r\n  //       .then(res => res.json())\r\n  //       .then(success => {\r\n  //         console.log(success);                \r\n  //     })\r\n  //     MySwal.fire({\r\n  //       position: 'top-end',\r\n  //       icon: 'success',\r\n  //       title: 'Your work has been saved',\r\n  //       showConfirmButton: false,\r\n  //       timer: 1500,\r\n  //       // title: <p>Hello World</p>,\r\n  //       footer: 'Copyright 2018',\r\n  //       didOpen: () => {                \r\n  //         MySwal.clickConfirm()\r\n  //       }\r\n  //     }).then(() => {\r\n  //       return MySwal.fire(<p>Your Information Updated Successfully </p>)\r\n  //     })\r\n  //     closeModal();\r\n  //     refreshPage();\r\n  // }\r\n\r\n  const onSubmit = (data) => { \r\n\r\n    fetch('http://localhost:5000/update/'+_id,{\r\n          method: 'PATCH',\r\n          headers: {'Content-type' : 'application/json'},\r\n          body: JSON.stringify(data)\r\n        })\r\n        .then(res => res.json())\r\n        .then(success => {\r\n          console.log(success);                \r\n      })\r\n      MySwal.fire({\r\n        position: 'top-end',\r\n        icon: 'success',\r\n        title: 'Your work has been saved',\r\n        showConfirmButton: false,\r\n        timer: 1500,\r\n        // title: <p>Hello World</p>,\r\n        footer: 'Copyright 2018',\r\n        didOpen: () => {                \r\n          MySwal.clickConfirm()\r\n        }\r\n      }).then(() => {\r\n        return MySwal.fire(<p>Your Information Updated Successfully </p>)\r\n      })\r\n      closeModal();\r\n      refreshPage();\r\n  }\r\n    return (\r\n        <div>            \r\n          <Modal\r\n              isOpen={modalIsOpen}            \r\n              onRequestClose={closeModal}\r\n              style={customStyles}\r\n              contentLabel=\"Example Modal\"\r\n              >\r\n\r\n              <h2 className=\"text-primary\">Update The Blog</h2>\r\n              <form onSubmit={handleSubmit(onSubmit)}>\r\n                  <div className=\"form-group\">                    \r\n                        <input type=\"text\" className=\"form-control\" defaultValue={singleData.title} name=\"title\" ref={register({ required: true})}  />\r\n                        {errors.title && <small className=\"text-danger\">This field is required</small>}\r\n                    </div>\r\n                    <div className=\"form-group\">                    \r\n                        <input type=\"text\" className=\"form-control\" defaultValue={singleData.name} name=\"name\" ref={register({ required: true})}  />\r\n                        {errors.name && <small className=\"text-danger\">This field is required</small>}\r\n                    </div>\r\n                    <div className=\"form-group\">                    \r\n                        <textarea rows=\"3\" cols=\"40\" defaultValue={singleData.tags} type=\"text\" className=\"form-control\" name=\"tags\" ref={register({ required: true})} />\r\n                        {errors.tags && <small className=\"text-danger\">This field is required</small>}\r\n                    </div>\r\n                    <div className=\"form-group\">                      \r\n                      <label className=\"upload-btn\">\r\n                        <input type=\"file\" name=\"image\" onChange={handleFileChange} name=\"file\" className=\"form-control-file\"/>                        \r\n                        <FontAwesomeIcon\r\n                          icon={faCloudUploadAlt}\r\n                          className=\"mr-2\"\r\n                        />\r\n                        Upload Image\r\n                      </label>                     \r\n                    </div>\r\n                    <div className=\"form-group text-right\">\r\n                        <button type=\"submit\" className=\"btn btn-primary\">Update</button>\r\n                    </div>                    \r\n                </form>\r\n          </Modal>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default UpdateCardValue;",["51","52"],{"ruleId":"53","replacedBy":"54"},{"ruleId":"55","replacedBy":"56"},{"ruleId":"57","severity":1,"message":"58","line":1,"column":8,"nodeType":"59","messageId":"60","endLine":1,"endColumn":12},{"ruleId":"61","severity":1,"message":"62","line":77,"column":85,"nodeType":"63","endLine":77,"endColumn":96},{"ruleId":"64","severity":1,"message":"65","line":8,"column":17,"nodeType":"66","endLine":8,"endColumn":54},{"ruleId":"64","severity":1,"message":"65","line":17,"column":29,"nodeType":"66","endLine":17,"endColumn":66},{"ruleId":"57","severity":1,"message":"67","line":51,"column":10,"nodeType":"59","messageId":"60","endLine":51,"endColumn":20},{"ruleId":"57","severity":1,"message":"68","line":31,"column":22,"nodeType":"59","messageId":"60","endLine":31,"endColumn":35},{"ruleId":"57","severity":1,"message":"69","line":37,"column":10,"nodeType":"59","messageId":"60","endLine":37,"endColumn":14},{"ruleId":"61","severity":1,"message":"62","line":134,"column":85,"nodeType":"63","endLine":134,"endColumn":96},{"ruleId":"53","replacedBy":"70"},{"ruleId":"55","replacedBy":"71"},"no-native-reassign",["72"],"no-negated-in-lhs",["73"],"no-unused-vars","'logo' is defined but never used.","Identifier","unusedVar","react/jsx-no-duplicate-props","No duplicate props allowed","JSXAttribute","jsx-a11y/anchor-is-valid","The href attribute requires a valid value to be accessible. Provide a valid, navigable address as the href value. If you cannot provide a valid href, but still need the element to resemble a link, use a button and change it with appropriate styles. Learn more: https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md","JSXOpeningElement","'singleData' is assigned a value but never used.","'setSingleData' is assigned a value but never used.","'file' is assigned a value but never used.",["72"],["73"],"no-global-assign","no-unsafe-negation"]